{
  "version": 3,
  "sources": ["src\\commands-unregister.module.ts", "src\\lib\\lib.env.ts"],
  "sourcesContent": [
    "import { REST, Routes } from './external/discord/discord.module.js';\nimport { Core_Console_Error } from './lib/ericchase/Core_Console_Error.js';\nimport { Core_Console_Log } from './lib/ericchase/Core_Console_Log.js';\nimport { getBotToken, getClientID } from './lib/lib.env.js';\n\nconst rest = new REST({ version: '10' }).setToken(getBotToken());\n\nasync function unregisterCommand(command_id: string) {\n  try {\n    await rest.delete(Routes.applicationCommand(getClientID(), command_id));\n    // await rest.delete(Routes.applicationGuildCommand(CLIENT_ID, guildId, commandId));\n    Core_Console_Log(`Successfully deleted command with ID: ${command_id}`);\n  } catch (error) {\n    Core_Console_Error('Failed to delete command:', error);\n  }\n}\n// unregisterCommand();\n",
    "function getVariable(key: string) {\n  if (process.env[key] === undefined || process.env[key] === '') {\n    throw new Error(`.env '${key}' is undefined`);\n  }\n  return process.env[key];\n}\n\nexport function getBotToken() {\n  return getVariable('BOT_TOKEN');\n}\nexport function getClientID() {\n  return getVariable('CLIENT_ID');\n}\nexport function getGuildID() {\n  return getVariable('GUILD_ID');\n}\nexport function getMongoDBUrl() {\n  return getVariable('MONGODBURL');\n}\n"
  ],
  "mappings": ";;AAAA;;;ACAA,SAAS,WAAW,CAAC,KAAa;AAAA,EAChC,IAAI,QAAQ,IAAI,SAAS,aAAa,QAAQ,IAAI,SAAS,IAAI;AAAA,IAC7D,MAAM,IAAI,MAAM,SAAS,mBAAmB;AAAA,EAC9C;AAAA,EACA,OAAO,QAAQ,IAAI;AAAA;AAGd,SAAS,WAAW,GAAG;AAAA,EAC5B,OAAO,YAAY,WAAW;AAAA;;;ADHhC,IAAM,OAAO,IAAI,KAAK,EAAE,SAAS,KAAK,CAAC,EAAE,SAAS,YAAY,CAAC;",
  "debugId": "5A54A39208ED3A5B64756E2164756E21",
  "names": []
}